<Activity mc:Ignorable="sap sap2010" x:Class="Portal_PelitaAir_PivotTable" this:Portal_PelitaAir_PivotTable.in_strSheetName="Sales Report Agent" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_strSheetName" Type="InArgument(x:String)" />
    <x:Property Name="in_strExcelFile" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1076.830188679245,1919.9999999999998</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Portal_PelitaAir_PivotTable_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="60">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.GSuite.Drive.Models</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="52">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Portal_PelitaAir_PivotTable" sap:VirtualizedContainerService.HintSize="557.8867924528302,1854.7924528301885" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Report" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="workbookApp" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message pivot table" sap:VirtualizedContainerService.HintSize="496.3018867924528,89.66037735849056" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;STEP: Creating Pivot table&quot;]" />
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="496.3018867924528,1615.698113207547" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" Workbook="[workbookapp]" WorkbookPath="[in_strExcelFile]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="461.88679245283015,1506.1132075471696" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_Report]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="400.3018867924528,59.77358490566037" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[in_strSheetName]">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
            <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="total AC" DataTable="[dt_Report]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="400.3018867924528,182.0377358490566" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
            <InvokeMethod DisplayName="Change position total AC" sap:VirtualizedContainerService.HintSize="400.3018867924528,134.94339622641508" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="SetOrdinal">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sd:DataColumn">[dt_Report.Columns("total AC")]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Int32">
                <VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="dt_Report.Columns.IndexOf(&quot;AC PPH&quot;)+1" />
              </InArgument>
            </InvokeMethod>
            <ui:ExcelWriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_Report]" DisplayName="ReWrite Range" sap:VirtualizedContainerService.HintSize="400.3018867924528,87.84905660377358" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[in_strSheetName]" />
            <Sequence sap2010:Annotation.AnnotationText="Make Pivot Table based on Sales Agent Report sheet then copied the result as value on a new sheet" DisplayName="Create Pivot table for Sales Agent Report" sap:VirtualizedContainerService.HintSize="400.3018867924528,772.5283018867924" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="startCell" />
                <Variable x:TypeArguments="x:String" Name="endCell" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get Range to create Pivot Table" Code="Microsoft.Office.Interop.Excel.Workbook wb = workbookApp.CurrentWorkbook;&#xA;Microsoft.Office.Interop.Excel.Worksheet ws = (Microsoft.Office.Interop.Excel.Worksheet) wb.Worksheets[sheetName];&#xA;//Console.WriteLine(wb);&#xA;//Console.WriteLine(ws);&#xA;&#xA;int nCols = ws.UsedRange.Columns.Count;&#xA;int nRows = ws.UsedRange.Rows.Count;&#xA;//Console.WriteLine(String.Format(&quot;nRows: {0}, nCols: {1}&quot;, nRows, nCols));&#xA;&#xA;startCell = &quot;A1&quot;;&#xA;endCell = String.Format(&quot;{0}{1}&quot;, UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(nCols), nRows);&#xA;//Console.WriteLine(&quot;Range: &quot; + String.Format(&quot;{0}:{1}&quot;, startCell, endCell));&#xA;&#xA;foreach (string sheet in sheetsToCreate) {&#xA;&#x9;workbookApp.SetSheet(sheet, true);&#xA;    //Console.WriteLine(&quot;Created sheet: &quot; + sheet);&#xA;}" DisplayName="Get Range Table" sap:VirtualizedContainerService.HintSize="338.71698113207543,195.62264150943395" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
                <ui:InvokeCode.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="sheetName">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_strSheetName" />
                  </InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="startCell">
                    <VisualBasicReference x:TypeArguments="x:String" ExpressionText="startCell" />
                  </OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="endCell">
                    <VisualBasicReference x:TypeArguments="x:String" ExpressionText="endCell" />
                  </OutArgument>
                  <InArgument x:TypeArguments="s:String[]" x:Key="sheetsToCreate">
                    <VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{&quot;Pivot&quot;}" />
                  </InArgument>
                  <InArgument x:TypeArguments="ui:WorkbookApplication" x:Key="workbookApp">
                    <VisualBasicValue x:TypeArguments="ui:WorkbookApplication" ExpressionText="workbookApp" />
                  </InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
              <ui:ExcelWriteCell Cell="[&quot;AN2:AN&quot;+(dt_Report.RowCount+1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338.71698113207543,87.84905660377358" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[in_strSheetName]" Text="=AK2+AL2" />
              <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Create Pivot Table from WH Alloc Sheet" Code="Microsoft.Office.Interop.Excel.Workbook wb = workbookApp.CurrentWorkbook;&#xD;&#xA;Microsoft.Office.Interop.Excel.Worksheet ws = (Microsoft.Office.Interop.Excel.Worksheet)wb.Worksheets[sheetName];&#xD;&#xA;&#xD;&#xA;Microsoft.Office.Interop.Excel.Range range = ws.Range[startCell, endCell];&#xD;&#xA;&#xD;&#xA;/* Pivot Table */&#xD;&#xA;// Create New sheet&#xD;&#xA;Microsoft.Office.Interop.Excel.Worksheet pivotSheet = (Microsoft.Office.Interop.Excel.Worksheet)wb.Sheets[&quot;Pivot&quot;];&#xD;&#xA;pivotSheet.Activate();&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create pivot table&#xD;&#xA;Microsoft.Office.Interop.Excel.PivotTables pivotTables = (Microsoft.Office.Interop.Excel.PivotTables)pivotSheet.PivotTables();&#xD;&#xA;Microsoft.Office.Interop.Excel.PivotCache pivotCache = (Microsoft.Office.Interop.Excel.PivotCache)wb.PivotCaches().Add(Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlDatabase, range);&#xD;&#xA;Microsoft.Office.Interop.Excel.PivotTable pivotTable = pivotCache.CreatePivotTable(&quot;R1C1&quot;, &quot;Pivot Table&quot;, true, Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersionCurrent);&#xD;&#xA;pivotTable.TableStyle2 = &quot;PivotStyleLight16&quot;;&#xD;&#xA;&#xD;&#xA;// Add fields&#xD;&#xA;Microsoft.Office.Interop.Excel.PivotField field;&#xD;&#xA;&#xD;&#xA;field = (Microsoft.Office.Interop.Excel.PivotField)pivotTable.PivotFields(&quot;Transaction&quot;);&#xD;&#xA;field.Orientation = Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField;&#xD;&#xA;field.LayoutForm = Microsoft.Office.Interop.Excel.XlLayoutFormType.xlTabular;&#xD;&#xA;field.RepeatLabels = true;&#xD;&#xA;field.Subtotals[1] = false;&#xD;&#xA;&#xD;&#xA;field = (Microsoft.Office.Interop.Excel.PivotField)pivotTable.PivotFields(&quot;Booking Code&quot;);&#xD;&#xA;field.Orientation = Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField;&#xD;&#xA;field.Subtotals[1] = false;&#xD;&#xA;&#xD;&#xA;field = (Microsoft.Office.Interop.Excel.PivotField)pivotTable.PivotFields(&quot;total AC&quot;);&#xD;&#xA;field.Orientation = Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField;&#xD;&#xA;field.Function = Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlSum;&#xD;&#xA;field.Name = &quot;Sum Of total AC&quot;;&#xD;&#xA;" DisplayName="Create Pivot Table" sap:VirtualizedContainerService.HintSize="338.71698113207543,195.62264150943395" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
                <ui:InvokeCode.Arguments>
                  <InArgument x:TypeArguments="ui:WorkbookApplication" x:Key="workbookApp">
                    <VisualBasicValue x:TypeArguments="ui:WorkbookApplication" ExpressionText="workbookApp" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="startCell">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="startCell" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="endCell">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="endCell" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="sheetName">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_strSheetName" />
                  </InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
              <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="338.71698113207543,25.358490566037734" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>